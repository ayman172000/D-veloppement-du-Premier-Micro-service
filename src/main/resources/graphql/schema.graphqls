type Query {
    accountsList : [BankAccount]
    bankAccountById (id:String) :BankAccount
    customers : [Customer]
}

type Mutation {
    addAccount(bankAccount : BankAccountRequestDTO) :BankAccount
    updateAccount(id : String, requestDTO : BankAccountRequestDTO) :BankAccountResponseDTO
    deleteAccount(id : String) : String
}
type BankAccount {
    id : String,
    dateDeCreation : Float,
    solde : Float,
    devise : String,
    accountType : String
    customer : Customer
}
type Customer {
    id : Float
    name : String
    accountList : [BankAccount]
}
type BankAccountResponseDTO {
    id : String,
    dateDeCreation : Float,
    solde : Float,
    devise : String,
    accountType : String
}
input BankAccountRequestDTO {
    solde : Float,
    devise : String,
    accountType : String
}
